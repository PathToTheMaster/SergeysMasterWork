// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PathToTheMaster.Web.Data;

namespace PathToTheMaster.Web.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    partial class DatabaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("PathToTheMaster.Web.Data.Entity.Addresses", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CityId");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.ToTable("Addresses");
                });

            modelBuilder.Entity("PathToTheMaster.Web.Data.Entity.Analysis", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AnalysisNormId");

                    b.Property<int>("GroupId");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.HasIndex("AnalysisNormId");

                    b.HasIndex("GroupId");

                    b.ToTable("Analysis");
                });

            modelBuilder.Entity("PathToTheMaster.Web.Data.Entity.AnalysisNorm", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AgeEnd");

                    b.Property<int>("AgeStart");

                    b.Property<string>("Name");

                    b.Property<bool>("Sex");

                    b.HasKey("Id");

                    b.ToTable("AnalysisNorm");
                });

            modelBuilder.Entity("PathToTheMaster.Web.Data.Entity.City", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("City");
                });

            modelBuilder.Entity("PathToTheMaster.Web.Data.Entity.Group", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Group");
                });

            modelBuilder.Entity("PathToTheMaster.Web.Data.Entity.Laboratory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AddressesId");

                    b.HasKey("Id");

                    b.HasIndex("AddressesId");

                    b.ToTable("Laboratory");
                });

            modelBuilder.Entity("PathToTheMaster.Web.Data.Entity.Package", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AnalysisId");

                    b.Property<decimal>("Cost");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.HasIndex("AnalysisId");

                    b.ToTable("Package");
                });

            modelBuilder.Entity("PathToTheMaster.Web.Data.Entity.Patient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Born");

                    b.Property<string>("Name");

                    b.Property<bool>("Sex");

                    b.HasKey("Id");

                    b.ToTable("Patient");
                });

            modelBuilder.Entity("PathToTheMaster.Web.Data.Entity.SalePack", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("PackageId");

                    b.Property<int>("PatientId");

                    b.HasKey("Id");

                    b.HasIndex("PackageId");

                    b.HasIndex("PatientId");

                    b.ToTable("SalePack");
                });

            modelBuilder.Entity("PathToTheMaster.Web.Data.Entity.Addresses", b =>
                {
                    b.HasOne("PathToTheMaster.Web.Data.Entity.City", "City")
                        .WithMany()
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("PathToTheMaster.Web.Data.Entity.Analysis", b =>
                {
                    b.HasOne("PathToTheMaster.Web.Data.Entity.AnalysisNorm", "AnalysisNorm")
                        .WithMany()
                        .HasForeignKey("AnalysisNormId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("PathToTheMaster.Web.Data.Entity.Group", "Group")
                        .WithMany()
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("PathToTheMaster.Web.Data.Entity.Laboratory", b =>
                {
                    b.HasOne("PathToTheMaster.Web.Data.Entity.Addresses", "Addresses")
                        .WithMany()
                        .HasForeignKey("AddressesId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("PathToTheMaster.Web.Data.Entity.Package", b =>
                {
                    b.HasOne("PathToTheMaster.Web.Data.Entity.Analysis", "Analysis")
                        .WithMany()
                        .HasForeignKey("AnalysisId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("PathToTheMaster.Web.Data.Entity.SalePack", b =>
                {
                    b.HasOne("PathToTheMaster.Web.Data.Entity.Package", "Package")
                        .WithMany()
                        .HasForeignKey("PackageId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("PathToTheMaster.Web.Data.Entity.Patient", "Patient")
                        .WithMany()
                        .HasForeignKey("PatientId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
